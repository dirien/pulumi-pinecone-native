// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pinecone.Provider
{
    [PineconeResourceType("pinecone:provider:PineconeIndex")]
    public partial class PineconeIndex : global::Pulumi.CustomResource
    {
        [Output("indexName")]
        public Output<string> IndexName { get; private set; } = null!;


        /// <summary>
        /// Create a PineconeIndex resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PineconeIndex(string name, PineconeIndexArgs args, CustomResourceOptions? options = null)
            : base("pinecone:provider:PineconeIndex", name, args ?? new PineconeIndexArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PineconeIndex(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("pinecone:provider:PineconeIndex", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PineconeIndex resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PineconeIndex Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PineconeIndex(name, id, options);
        }
    }

    public sealed class PineconeIndexArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The dimensions of the vectors in the index.
        /// </summary>
        [Input("indexDimension", required: true)]
        public Input<int> IndexDimension { get; set; } = null!;

        [Input("indexMetric", required: true)]
        public Input<string> IndexMetric { get; set; } = null!;

        /// <summary>
        /// The name of the Pinecone index.
        /// </summary>
        [Input("indexName", required: true)]
        public Input<string> IndexName { get; set; } = null!;

        [Input("indexPodType", required: true)]
        public Input<string> IndexPodType { get; set; } = null!;

        [Input("indexPods", required: true)]
        public Input<int> IndexPods { get; set; } = null!;

        [Input("indexReplicas", required: true)]
        public Input<int> IndexReplicas { get; set; } = null!;

        public PineconeIndexArgs()
        {
        }
        public static new PineconeIndexArgs Empty => new PineconeIndexArgs();
    }
}
